package br.com.marvelkmp.core.domain.model

sealed class CharacterRace(val type: CharacterRaceType, val name: String) {
    data class Human(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class HumanRadiation(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class HumanClone(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class HumanKree(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class HumanSpartoi(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class HumanVulcan(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class HumanVuldarian(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class Inhuman(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class Mutant(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class Cyborg(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class Metahuman(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class Clone(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class HumanAltered(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class HumanCosmic(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class Vampire(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)
    data class Zombie(val race: String) : CharacterRace(CharacterRaceType.HUMAN, race)

    data class Alien(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Alpha(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Amazon(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Asgardian(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Atlantean(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Bizarro(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class BlackRacer(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Bolovaxian(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class CosmicEntity(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Czarnian(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class DathomirianZabrak(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class DemiGod(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Demon(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Eternal(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class FloraColossus(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class FrostGiant(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class GodEternal(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Gungan(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class IcthyoSapien(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Kaiju(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Kakarantharaian(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Korugaran(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Kryptonian(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Luphomoid(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Maiar(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Martian(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class NewGod(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Neyaphem(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Parademon(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Rodian(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Saiyan(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Spartoi(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Strontian(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Symbiote(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Talokite(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Tamaranean(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Ungaran(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class XenomorphXX121(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class Yautja(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class YodaSpecies(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)
    data class ZenWhoberian(val race: String) : CharacterRace(CharacterRaceType.ALIEN, race)

    data class Android(val race: String) : CharacterRace(CharacterRaceType.ANDROID, race)

    data class Gorilla(val race: String) : CharacterRace(CharacterRaceType.ANIMAL, race)

    companion object {
        fun parse(race: String): CharacterRace = when (race) {
            "Human" -> Human(race)
            "Human / Radiation" -> HumanRadiation(race)
            "Human / Clone" -> HumanClone(race)
            "Human-Kree" -> HumanKree(race)
            "Human-Spartoi" -> HumanSpartoi(race)
            "Human-Vulcan" -> HumanVulcan(race)
            "Human-Vuldarian" -> HumanVuldarian(race)
            "Inhuman" -> Inhuman(race)
            "Mutant" -> Mutant(race)
            "Cyborg" -> Cyborg(race)
            "Metahuman" -> Metahuman(race)
            "Clone" -> Clone(race)
            "Human / Altered" -> HumanAltered(race)
            "Human / Cosmic" -> HumanCosmic(race)
            "Zombie" -> Zombie(race)
            "Vampire" -> Vampire(race)

            "Alien" -> Alien(race)
            "Alpha" -> Alpha(race)
            "Amazon" -> Amazon(race)
            "Asgardian" -> Asgardian(race)
            "Atlantean" -> Atlantean(race)
            "Bizarro" -> Bizarro(race)
            "Black Racer" -> BlackRacer(race)
            "Bolovaxian" -> Bolovaxian(race)
            "Cosmic Entity" -> CosmicEntity(race)
            "Czarnian" -> Czarnian(race)
            "Dathomirian Zabrak" -> DathomirianZabrak(race)
            "Demi-God" -> DemiGod(race)
            "Demon" -> Demon(race)
            "Eternal" -> Eternal(race)
            "Flora Colossus" -> FloraColossus(race)
            "Frost Giant" -> FrostGiant(race)
            "God / Eternal" -> GodEternal(race)
            "Gungan" -> Gungan(race)
            "Icthyo Sapien" -> IcthyoSapien(race)
            "Kaiju" -> Kaiju(race)
            "Kakarantharaian" -> Kakarantharaian(race)
            "Korugaran" -> Korugaran(race)
            "Kryptonian" -> Kryptonian(race)
            "Luphomoid" -> Luphomoid(race)
            "Maiar" -> Maiar(race)
            "Martian" -> Martian(race)
            "New God" -> NewGod(race)
            "Neyaphem" -> Neyaphem(race)
            "Parademon" -> Parademon(race)
            "Rodian" -> Rodian(race)
            "Saiyan" -> Saiyan(race)
            "Spartoi" -> Spartoi(race)
            "Strontian" -> Strontian(race)
            "Symbiote" -> Symbiote(race)
            "Talokite" -> Talokite(race)
            "Tamaranean" -> Tamaranean(race)
            "Ungaran" -> Ungaran(race)
            "Xenomorph XX121" -> XenomorphXX121(race)
            "Yautja" -> Yautja(race)
            "Yoda's species" -> YodaSpecies(race)
            "Zen-Whoberian" -> ZenWhoberian(race)

            "Android" -> Android(race)

            "Gorilla" -> Gorilla(race)

            else -> Alien(race)
        }
    }
}
